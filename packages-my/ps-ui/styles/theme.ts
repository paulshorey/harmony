// ts-fix: Typescript doesn't understand method referring to parent object as `this`?
import { EmotionCSSType, VariantProps } from '@ps/ui/types/component';

import colors from './colors';
import fonts from './fonts';
import mq from './mq';
import variants from './variants';

/**
 * Theme can be extended/modified in the app which uses this library.
 * NOTE: whenever you see "default" property and more specific properties,
 * both the default and the more specific properties are merged together.
 */
const theme: themeType = {
  colorScheme: 'light',
  colors,
  fonts,
  mq,
  variants,
  getColor: function getColor(key = '', colorScheme?: string) {
    return (
      this.colors[colorScheme || this.colorScheme]?.[key] ||
      this.colors.default?.[key] ||
      ''
    );
  },
  getVariant({ component, label }) {
    const aggregateStyles: any = '';

    return aggregateStyles;
  },
};

export default theme;

export type colorSchemeType = 'light' | 'dark';
export type themeType = {
  colorScheme: colorSchemeType;
  colors: Record<string, Record<string, string>>;
  fonts: Record<string, string>;
  mq: Record<string, string>;
  variants: Record<string, Record<string, EmotionCSSType>>;
  getColor: (color: string, colorScheme: colorSchemeType) => string;
  getVariant: (
    options: VariantProps & {
      /**
       * Name of the component. Capitalized, just like the folder name.
       */
      component?: string;
      /**
       * Optional. Shown in className html attribute generated by EmotionJS.
       */
      label?: string;
    }
  ) => EmotionCSSType;
};
